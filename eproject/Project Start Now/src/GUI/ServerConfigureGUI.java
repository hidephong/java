/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ServerConfigureGUI2.java
 *
 * Created on Apr 9, 2011, 5:37:38 PM
 */

package GUI;
import DataAccess.ServerConfigure;
import Language.Language;
import java.awt.Color;
import java.util.Properties;
import javax.swing.JOptionPane;

/**
 *
 * @author Nha.HV
 */
public class ServerConfigureGUI extends javax.swing.JDialog {

    /** Creates new form ServerConfigureGUI2 */
    public ServerConfigureGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadServerConfig();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTF_HostIP = new javax.swing.JTextField();
        jTF_Instance = new javax.swing.JTextField();
        jTF_Port = new javax.swing.JTextField();
        jTF_Username = new javax.swing.JTextField();
        jL_Username = new javax.swing.JLabel();
        jL_Instance = new javax.swing.JLabel();
        jL_Password = new javax.swing.JLabel();
        jL_DB = new javax.swing.JLabel();
        jTF_DB = new javax.swing.JTextField();
        jL_Port = new javax.swing.JLabel();
        jL_Host_Hint = new javax.swing.JLabel();
        jL_Port_Hint = new javax.swing.JLabel();
        jL_Instance_Hint = new javax.swing.JLabel();
        jL_Username_Hint = new javax.swing.JLabel();
        jL_Password_Hint = new javax.swing.JLabel();
        jL_DB_Hint = new javax.swing.JLabel();
        jPassword = new javax.swing.JPasswordField();
        jBt_Save = new javax.swing.JButton();
        jBt_Cancel = new javax.swing.JButton();
        jBt_Discard = new javax.swing.JButton();
        jBt_Unlock = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Language.Language", Language.getLocale()); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, bundle.getString("SERVER CONFIGURE"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel1.setText(bundle.getString("HOSTNAME (IP):")); // NOI18N

        jTF_HostIP.setEnabled(false);

        jTF_Instance.setEnabled(false);

        jTF_Port.setEnabled(false);

        jTF_Username.setEnabled(false);

        jL_Username.setText(bundle.getString("USERNAME: ")); // NOI18N

        jL_Instance.setText(bundle.getString("INSTANCE: ")); // NOI18N

        jL_Password.setText(bundle.getString("PASSWORD: ")); // NOI18N

        jL_DB.setText(bundle.getString("DATABASE: ")); // NOI18N

        jTF_DB.setEnabled(false);

        jL_Port.setText(bundle.getString("PORT: ")); // NOI18N

        jL_Host_Hint.setFont(new java.awt.Font("Tahoma", 2, 11));
        jL_Host_Hint.setForeground(java.awt.Color.gray);
        jL_Host_Hint.setText("(www.hostname.com or 123.0.0.34)");

        jL_Port_Hint.setFont(new java.awt.Font("Tahoma", 2, 11));
        jL_Port_Hint.setForeground(java.awt.Color.gray);
        jL_Port_Hint.setText("(3336)");

        jL_Instance_Hint.setFont(new java.awt.Font("Tahoma", 2, 11));
        jL_Instance_Hint.setForeground(java.awt.Color.gray);
        jL_Instance_Hint.setText("(SQLEXPRESS or SQL SERVER)");

        jL_Username_Hint.setFont(new java.awt.Font("Tahoma", 2, 11));
        jL_Username_Hint.setForeground(java.awt.Color.gray);
        jL_Username_Hint.setText(bundle.getString("(YOUR USERNAME)")); // NOI18N

        jL_Password_Hint.setFont(new java.awt.Font("Tahoma", 2, 11));
        jL_Password_Hint.setForeground(java.awt.Color.gray);
        jL_Password_Hint.setText(bundle.getString("(YOUR PASSWORD)")); // NOI18N

        jL_DB_Hint.setFont(new java.awt.Font("Tahoma", 2, 11));
        jL_DB_Hint.setForeground(java.awt.Color.gray);
        jL_DB_Hint.setText(bundle.getString("(DATABASE NAME)")); // NOI18N

        jPassword.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_Instance)
                    .addComponent(jL_Username)
                    .addComponent(jL_Password)
                    .addComponent(jL_DB)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_Host_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_Instance, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jL_Instance_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_Username, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jL_Username_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jL_Password_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_DB_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_DB, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jTF_HostIP, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jL_Port)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTF_Port, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(jL_Port_Hint, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTF_HostIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTF_Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_Port))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jL_Host_Hint)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jL_Instance)
                            .addComponent(jTF_Instance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jL_Instance_Hint)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jL_Username)
                            .addComponent(jTF_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jL_Username_Hint)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jL_Password)
                            .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jL_Password_Hint)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jL_DB)
                            .addComponent(jTF_DB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jL_DB_Hint))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jL_Port_Hint))))
        );

        jBt_Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/gnome-dev-zipdisk.png"))); // NOI18N
        jBt_Save.setText(bundle.getString("SAVE")); // NOI18N
        jBt_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_SaveActionPerformed(evt);
            }
        });

        jBt_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/process-stop.png"))); // NOI18N
        jBt_Cancel.setText(bundle.getString("CANCEL")); // NOI18N
        jBt_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_CancelActionPerformed(evt);
            }
        });

        jBt_Discard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/preferences-desktop-theme.png"))); // NOI18N
        jBt_Discard.setText(bundle.getString("DISCARD.CHANGE")); // NOI18N
        jBt_Discard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_DiscardActionPerformed(evt);
            }
        });

        jBt_Unlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/document-decrypt.png"))); // NOI18N
        jBt_Unlock.setText(bundle.getString("UNLOCK")); // NOI18N
        jBt_Unlock.setDefaultCapable(false);
        jBt_Unlock.setRequestFocusEnabled(false);
        jBt_Unlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_UnlockActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/serverlogo.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBt_Unlock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addComponent(jBt_Discard)
                        .addGap(18, 18, 18)
                        .addComponent(jBt_Cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBt_Save)))
                .addContainerGap())
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBt_Save)
                        .addComponent(jBt_Cancel)
                        .addComponent(jBt_Discard))
                    .addComponent(jBt_Unlock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-597)/2, (screenSize.height-488)/2, 597, 488);
    }// </editor-fold>//GEN-END:initComponents

    private void jBt_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_SaveActionPerformed
        if(this.validateInput()){
            this.SaveConfig();
        }
}//GEN-LAST:event_jBt_SaveActionPerformed

    private void jBt_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_CancelActionPerformed
        this.Cancel();
}//GEN-LAST:event_jBt_CancelActionPerformed

    private void jBt_DiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_DiscardActionPerformed
        this.loadServerConfig();
}//GEN-LAST:event_jBt_DiscardActionPerformed

    private void jBt_UnlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_UnlockActionPerformed
        this.Unlock();
}//GEN-LAST:event_jBt_UnlockActionPerformed

    /**
     * Load server config
     */
    private void loadServerConfig(){
        Properties prop = new ServerConfigure().loadNorSetDefaultServerConfig();
        jTF_HostIP.setText(prop.getProperty(ServerConfigure.CONFIG_SERVERNAME));
        jTF_Port.setText(prop.getProperty(ServerConfigure.CONFIG_PORTNUMBER));
        jTF_Username.setText(prop.getProperty(ServerConfigure.CONFIG_USERNAME));
        jPassword.setText(prop.getProperty(ServerConfigure.CONFIG_PASSWORD));
        jTF_DB.setText(prop.getProperty(ServerConfigure.CONFIG_DATABASE));
        jTF_Instance.setText(prop.getProperty(ServerConfigure.CONFIG_SQLINSTANCE));

    }






    private boolean validateInput(){


        if(jTF_HostIP.getText().isEmpty()){
            jTF_HostIP.setBackground(Color.yellow);
            jTF_HostIP.requestFocus();
            jL_Host_Hint.setForeground(Color.red);
            jL_Host_Hint.setText(java.util.ResourceBundle.getBundle("Language.Language", Language.getLocale()).getString("HOSTNAME CANNOT BE EMPTY!"));
            return false; }
       if(jTF_Port.getText().isEmpty()){
            jTF_Port.setBackground(Color.yellow);
            jTF_Port.requestFocus();
            jL_Port_Hint.setForeground(Color.red);
            jL_Port_Hint.setText(java.util.ResourceBundle.getBundle("Language.Language", Language.getLocale()).getString("PORT CANNOT BE EMPTY!"));
            return false;
            }
        if(true){
            try {
            // Try to check portNumebar is A Number, if NaN -> This next command will be error and -> exception :

            Number  portNumber = new Integer(jTF_Port.getText());
            } catch (Exception e) {
                jL_Port_Hint.setForeground(Color.red);
                jL_Port_Hint.setText(java.util.ResourceBundle.getBundle("Language.Language", Language.getLocale()).getString("PORT MUST BE NUMBER!"));
                return false;
            }
        }
        if(jTF_Username.getText().isEmpty()){
            jTF_Username.setBackground(Color.yellow);
            jTF_Username.requestFocus();
            jL_Username_Hint.setForeground(Color.red);
            jL_Username_Hint.setText("Username cannot be empty!");
            return false;

        }
        if(jPassword.getPassword().toString().isEmpty()){
            jPassword.setBackground(Color.yellow);
            jPassword.requestFocus();
            jL_Password_Hint.setForeground(Color.red);
            jL_Password_Hint.setText("Password cannot be empty!");
            return false;

    }
        if(jTF_DB.getText().isEmpty()){
            jTF_DB.setBackground(Color.yellow);
            jTF_DB.requestFocus();
            jL_DB_Hint.setForeground(Color.red);
            jL_DB_Hint.setText("Database cannot be empty!");
         return false;
        }
return true;
    }










    public void Unlock() {
        jTF_HostIP.setEnabled(true);
        jTF_Port.setEnabled(true);
        jTF_Username.setEnabled(true);
        jTF_Instance.setEnabled(true);
        jTF_DB.setEnabled(true);
        jPassword.setEnabled(true);
    }

    public void DiscardChange() {
        loadServerConfig();


    }



    public void Cancel() {
        this.setVisible(false);

    }


    public boolean  SaveConfig() {
        Properties saveProperties = new Properties();
        saveProperties.setProperty(ServerConfigure.CONFIG_SERVERNAME, jTF_HostIP.getText());
        saveProperties.setProperty(ServerConfigure.CONFIG_PORTNUMBER, jTF_Port.getText());
        saveProperties.setProperty(ServerConfigure.CONFIG_SQLINSTANCE, jTF_Instance.getText());
        saveProperties.setProperty(ServerConfigure.CONFIG_USERNAME, jTF_Username.getText());
        saveProperties.setProperty(ServerConfigure.CONFIG_PASSWORD, jPassword.getText());
        saveProperties.setProperty(ServerConfigure.CONFIG_DATABASE, jTF_DB.getText());
        boolean saved =  ServerConfigure.saveNewProperties(saveProperties,ServerConfigure.CONFIG_FILENAME);
   if(saved){
         JOptionPane.showMessageDialog(this, java.util.ResourceBundle.getBundle("Language.Language", Language.getLocale()).getString("SAVED"));
         this.setVisible(false);
         return saved;
        }else{
            JOptionPane.showMessageDialog(this, "Error! Cannot access to save config. Save config failed");
           return false; 
        }
        
    }









    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ServerConfigureGUI dialog = new ServerConfigureGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBt_Cancel;
    private javax.swing.JButton jBt_Discard;
    private javax.swing.JButton jBt_Save;
    private javax.swing.JButton jBt_Unlock;
    private javax.swing.JLabel jL_DB;
    private javax.swing.JLabel jL_DB_Hint;
    private javax.swing.JLabel jL_Host_Hint;
    private javax.swing.JLabel jL_Instance;
    private javax.swing.JLabel jL_Instance_Hint;
    private javax.swing.JLabel jL_Password;
    private javax.swing.JLabel jL_Password_Hint;
    private javax.swing.JLabel jL_Port;
    private javax.swing.JLabel jL_Port_Hint;
    private javax.swing.JLabel jL_Username;
    private javax.swing.JLabel jL_Username_Hint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JTextField jTF_DB;
    private javax.swing.JTextField jTF_HostIP;
    private javax.swing.JTextField jTF_Instance;
    private javax.swing.JTextField jTF_Port;
    private javax.swing.JTextField jTF_Username;
    // End of variables declaration//GEN-END:variables

}
