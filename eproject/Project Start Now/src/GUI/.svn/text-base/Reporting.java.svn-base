/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Reporting.java
 *
 * Created on Apr 12, 2011, 3:02:47 PM
 */

package GUI;

import Business.ProjectComboBoxControler;
import Business.ProjectComboBoxModel;
import DataAccess.TheConnection;
import java.io.FileInputStream;
import java.sql.Connection;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.xml.crypto.dsig.keyinfo.RetrievalMethod;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Nha.HV
 */
public class Reporting extends javax.swing.JDialog {
    SimpleDateFormat SDFM = new SimpleDateFormat("yyyy-MM-dd");
    FileInputStream is;
    Connection Con;
    HashMap map;
    JasperViewer jv;
    JasperPrint jp;
    JasperFillManager jfm;
    JFrame jf;


    


    ProjectComboBoxModel pcbbm;

   
    /** Creates new form Reporting */
    public Reporting(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        TheConnection tc = new TheConnection();
        Con = TheConnection.getConnection();
        map = new HashMap();
        ProjectComboBoxControler pcbbc = new ProjectComboBoxControler();
        pcbbm = pcbbc.get_AllProject();
        fPrj_cbb.setModel(pcbbm);


       


    }
    private void setReportViewerBound(){
         jf = new JFrame("Reports");
         jf.add(jv.getContentPane());
          jf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
          int x = 1000, y = 600;
          jf.setSize(x,y);
          java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
          jf.setBounds((screenSize.width-x)/2, (screenSize.height-y)/2, x, y);
          jf.setVisible(true);
    }

     private void reportByMonth(String monthyear){
        String filename = "reports/MonthyReport.jasper";
        try {
            is = new FileInputStream(filename);
            System.out.println("Loadded..." + filename);
            map = new HashMap();
            map.put("byMonth", monthyear);
            Con = TheConnection.getConnection();
            jp = JasperFillManager.fillReport(is, map, Con);
            if(jp.getPages().isEmpty()){
                JOptionPane.showMessageDialog(this, "There is no report for this month.");
                return;
            }


            System.out.println("Fill Completed...");
            jv = new JasperViewer(jp);
           setReportViewerBound();


       
        } catch (Exception ex) {
            
        }

    }

      private void reportTimeSpan(String sd, String ed){
        String filename = "reports/TimeSpanReport.jasper";
        try {
            is = new FileInputStream(filename);
            System.out.println("Loadded..." + filename);
            map = new HashMap();
            map.put("StartDate", sd);
            map.put("EndDate", ed);
            Con = TheConnection.getConnection();
            jp = JasperFillManager.fillReport(is, map, Con);
            if(jp.getPages().isEmpty()){
                JOptionPane.showMessageDialog(this, "There is no report for this time span.");
                return;
            }
            System.out.println("Fill Completed...");
            jv = new JasperViewer(jp);
             setReportViewerBound();
          
        } catch (Exception ex) {
        }

    }

       private void reportByProject(String pj,String sd, String ed){
        String filename = "reports/TimeSpanbyProjectReport.jasper";
        try {
            is = new FileInputStream(filename);
            System.out.println("Loadded..." + filename);
            map = new HashMap();
            map.put("ProjectName", pj);
            map.put("StartDate", sd);
            map.put("EndDate", ed);
            Con = TheConnection.getConnection();
            jp = JasperFillManager.fillReport(is, map, Con);
            if(jp.getPages().isEmpty()){
                JOptionPane.showMessageDialog(this, "There is no report for this project");
                return;
            }
            System.out.println("Fill Completed...");
            jv = new JasperViewer(jp);
          //   jv.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            setReportViewerBound();
         
        } catch (Exception ex) {
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        byMonth = new com.toedter.calendar.JMonthChooser();
        byMonth_Year = new com.toedter.calendar.JYearChooser();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        StartDate = new com.toedter.calendar.JDateChooser();
        EndDate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        fPrj_cbb = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reporting by time span", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        byMonth.setDayChooser(null);
        byMonth.setMonth(2);
        byMonth.setYearChooser(byMonth_Year);

        jLabel1.setText("By Month :");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/view-calendar-month.png"))); // NOI18N
        jButton1.setText("View Montly Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("By Time span : ");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/view-calendar-week.png"))); // NOI18N
        jButton2.setText("View Time span Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(byMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(byMonth_Year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1)
                    .addComponent(byMonth_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(EndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reporting by Project", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        fPrj_cbb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fPrj_cbb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fPrj_cbbMouseClicked(evt);
            }
        });
        fPrj_cbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fPrj_cbbActionPerformed(evt);
            }
        });
        fPrj_cbb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fPrj_cbbFocusGained(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icons_24/resource-calendar-child.png"))); // NOI18N
        jButton4.setText("View report by Project");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setText("By Projet Name: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fPrj_cbb, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fPrj_cbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-543)/2, (screenSize.height-294)/2, 543, 294);
    }// </editor-fold>//GEN-END:initComponents

    private void fPrj_cbbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fPrj_cbbMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_fPrj_cbbMouseClicked

    private void fPrj_cbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fPrj_cbbActionPerformed

}//GEN-LAST:event_fPrj_cbbActionPerformed

    private void fPrj_cbbFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fPrj_cbbFocusGained

}//GEN-LAST:event_fPrj_cbbFocusGained
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    Date d = new Date((byMonth_Year.getYear()-1900), byMonth.getMonth(),01);
    reportByMonth(SDFM.format(d).toString());
        System.out.println("d: "+d);
        System.out.println("sdf: "+SDFM.format(d));
        //System.out.println((byMonth_Year.getYear())+"-"+ byMonth.getMonth()+"-"+01);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    if(StartDate.getDate()==null || EndDate.getDate()==null){
        JOptionPane.showMessageDialog(this, "Please choose Startdate and Endate for Time span report");
        return;
    }

    String startDate = SDFM.format(StartDate.getDate());
    String endDate = SDFM.format(EndDate.getDate());
    reportTimeSpan(startDate, endDate);
       


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      if(fPrj_cbb.getSelectedIndex() == -1){
           JOptionPane.showMessageDialog(this, "Please choose a Project for Transfer by Project report");
           return;
      }
       if(StartDate.getDate()==null || EndDate.getDate()==null){
        JOptionPane.showMessageDialog(this, "Please choose Startdate and Endate for Time span report");
        return;
    }
        String startDate = SDFM.format(StartDate.getDate());
        String endDate = SDFM.format(EndDate.getDate());
        String ProjectName = fPrj_cbb.getSelectedItem().toString();
        reportByProject(ProjectName,startDate, endDate);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Reporting dialog = new Reporting(new javax.swing.JFrame(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser EndDate;
    private com.toedter.calendar.JDateChooser StartDate;
    private com.toedter.calendar.JMonthChooser byMonth;
    private com.toedter.calendar.JYearChooser byMonth_Year;
    private javax.swing.JComboBox fPrj_cbb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

}
